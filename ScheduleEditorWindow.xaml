<Window x:Class="RevitScheduleEditor.ScheduleEditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RevitScheduleEditor"
        mc:Ignorable="d"
        Title="Schedule Editor (Revit 2020)" Height="700" Width="1000">
    
    <Window.Resources>
        <!-- Colored Button Style -->
        <Style TargetType="Button" x:Key="ColoredButtonStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.8"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Excel-like Cell Style with Fill Handle -->
        <Style TargetType="DataGridCell" x:Key="ExcelLikeCellStyle">
            <Setter Property="BorderBrush" Value="#D6D6D6"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ContentPresenter VerticalAlignment="Center" Margin="4,2"/>
                                
                                <!-- Fill Handle - visible khi cell selected -->
                                <Rectangle x:Name="FillHandle"
                                          Width="6" Height="6"
                                          Fill="#0078D4"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Bottom"
                                          Margin="0,0,-1,-1"
                                          Cursor="SizeNWSE"
                                          Visibility="Collapsed"/>
                            </Grid>
                        </Border>
                        
                        <ControlTemplate.Triggers>
                            <!-- Show fill handle when selected -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="FillHandle" Property="Visibility" Value="Visible"/>
                                <Setter Property="Background" Value="#E3F2FD"/>
                            </Trigger>
                            
                            <!-- Highlight fill handle on hover -->
                            <Trigger SourceName="FillHandle" Property="IsMouseOver" Value="True">
                                <Setter TargetName="FillHandle" Property="Fill" Value="#106EBE"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Default DataGridCell Style -->
        <Style TargetType="DataGridCell">
            <Setter Property="BorderBrush" Value="#D6D6D6"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        </Style>
        
        <Style TargetType="DataGridRowHeader">
            <Setter Property="Background" Value="#F0F0F0"/>
            <Setter Property="BorderBrush" Value="DarkGray"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
        </Style>
        
        <!-- Custom Column Header Template with integrated Filter Button -->
        <Style TargetType="DataGridColumnHeader" x:Key="FilterColumnHeaderStyle">
            <Setter Property="Background" Value="#F0F0F0"/>
            <Setter Property="BorderBrush" Value="DarkGray"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridColumnHeader">
                        <Border x:Name="HeaderBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                
                                <!-- Column Name -->
                                <TextBlock Grid.Column="0" 
                                          Text="{TemplateBinding Content}"
                                          VerticalAlignment="Center"
                                          Margin="8,4"
                                          FontSize="12"
                                          FontWeight="SemiBold"
                                          TextTrimming="CharacterEllipsis"/>
                                
                                <!-- Filter Dropdown Button -->
                                <Button Grid.Column="1"
                                       x:Name="FilterButton"
                                       Content="▼"
                                       Width="22" Height="22"
                                       Margin="2"
                                       Background="Transparent"
                                       BorderBrush="Gray"
                                       BorderThickness="1"
                                       FontSize="10"
                                       ToolTip="Filter"
                                       Click="FilterButton_Click"/>
                            </Grid>
                        </Border>
                        
                        <!-- Trigger để highlight khi có filter active -->
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="HasFilter">
                                <Setter TargetName="HeaderBorder" Property="Background" Value="#FFE6CC"/>
                                <Setter TargetName="FilterButton" Property="Background" Value="#FF9800"/>
                                <Setter TargetName="FilterButton" Property="BorderBrush" Value="#F57C00"/>
                                <Setter TargetName="FilterButton" Property="Content" Value="🔽"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Active Filter Column Header Style -->
        <Style TargetType="DataGridColumnHeader" x:Key="FilterColumnHeaderStyleActive">
            <Setter Property="Background" Value="#FF6B35"/>
            <Setter Property="BorderBrush" Value="#E55100"/>
            <Setter Property="BorderThickness" Value="0,0,2,2"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridColumnHeader">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Border.Effect>
                                <DropShadowEffect Color="#FF6B35" Opacity="0.6" ShadowDepth="1" BlurRadius="3"/>
                            </Border.Effect>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                
                                <!-- Column Name -->
                                <TextBlock Grid.Column="0" 
                                          Text="{TemplateBinding Content}"
                                          VerticalAlignment="Center"
                                          Margin="8,4"
                                          FontSize="12"
                                          FontWeight="Bold"
                                          Foreground="White"
                                          TextTrimming="CharacterEllipsis"/>
                                
                                <!-- Filter Dropdown Button - Active State -->
                                <Button Grid.Column="1"
                                       x:Name="FilterButton"
                                       Content="🔽"
                                       Width="22" Height="22"
                                       Margin="2"
                                       Background="#FFAB00"
                                       BorderBrush="#FF8F00"
                                       BorderThickness="1"
                                       FontSize="10"
                                       Foreground="White"
                                       ToolTip="Filter Active - Click to modify"
                                       Click="FilterButton_Click">
                                    <Button.Effect>
                                        <DropShadowEffect Color="Black" Opacity="0.3" ShadowDepth="1" BlurRadius="2"/>
                                    </Button.Effect>
                                </Button>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="10" Background="#F8F8F8" 
                    Height="50" VerticalAlignment="Top">
            <TextBlock Text="Schedule:" VerticalAlignment="Center" Margin="0,0,8,0" FontWeight="SemiBold"/>
            <ComboBox x:Name="ScheduleComboBox" Width="320" Height="28" VerticalAlignment="Center"
                      ItemsSource="{Binding Schedules}"
                      SelectedItem="{Binding SelectedSchedule}"
                      DisplayMemberPath="Name"
                      IsEditable="True"
                      IsTextSearchEnabled="True"
                      StaysOpenOnEdit="True"/>
            
            <!-- Action Buttons -->
            <Button Content="Preview/Edit" Margin="15,0,5,0" Padding="12,6" Height="32" Width="100"
                    Background="#4CAF50" Foreground="White" FontWeight="SemiBold"
                    BorderBrush="#45A049" BorderThickness="1"
                    Command="{Binding PreviewEditCommand}"
                    ToolTip="Load and preview selected schedule data"
                    Style="{DynamicResource ColoredButtonStyle}"/>
            
            <Button Content="Import" Margin="5,0" Padding="12,6" Height="32" Width="80"
                    Background="#2196F3" Foreground="White" FontWeight="SemiBold"
                    BorderBrush="#1976D2" BorderThickness="1"
                    Command="{Binding ImportCommand}"
                    ToolTip="Import data from Excel file"
                    Style="{DynamicResource ColoredButtonStyle}"/>
            
            <Button Content="Export" Margin="5,0,0,0" Padding="12,6" Height="32" Width="80"
                    Background="#FF9800" Foreground="White" FontWeight="SemiBold"
                    BorderBrush="#F57C00" BorderThickness="1"
                    Command="{Binding ExportCommand}"
                    ToolTip="Export current data to Excel file"
                    Style="{DynamicResource ColoredButtonStyle}"/>
        </StackPanel>
        
        <!-- Filter Status Panel -->
        <StackPanel x:Name="FilterStatusPanel" Grid.Row="1" Orientation="Horizontal" Margin="10,5" 
                    Background="#E3F2FD" Height="35" VerticalAlignment="Top"
                    Visibility="Collapsed">
            <TextBlock Text="🔽 Active Filters:" VerticalAlignment="Center" Margin="5,0" 
                      FontWeight="SemiBold" Foreground="#1976D2"/>
            <TextBlock x:Name="FilterStatusText" Text="" VerticalAlignment="Center" 
                      Margin="5,0" Foreground="#424242"/>
            <Button x:Name="ClearAllFiltersButton" Content="Clear All Filters" 
                   Margin="10,0,5,0" Padding="8,4" Height="25"
                   Background="#F44336" Foreground="White" FontSize="11" FontWeight="SemiBold"
                   BorderBrush="#D32F2F" BorderThickness="1"
                   Click="ClearAllFiltersButton_Click"
                   ToolTip="Remove all active filters"
                   Style="{DynamicResource ColoredButtonStyle}"/>
            <TextBlock x:Name="FilteredRowCountText" Text="" VerticalAlignment="Center" 
                      Margin="10,0,5,0" FontStyle="Italic" Foreground="#666666"/>
        </StackPanel>

        <!-- DataGrid với filter buttons integrated trong column headers -->
        <DataGrid x:Name="ScheduleDataGrid"
                  Grid.Row="1"
                  Margin="5"
                  ItemsSource="{Binding ScheduleData}"
                  AutoGenerateColumns="False" 
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  IsReadOnly="False"
                  GridLinesVisibility="All"
                  HeadersVisibility="Column"
                  CanUserResizeColumns="True"
                  CanUserSortColumns="False"
                  SelectionMode="Extended"
                  SelectionUnit="Cell"
                  ClipboardCopyMode="IncludeHeader"
                  EnableRowVirtualization="True"
                  EnableColumnVirtualization="True"
                  VirtualizingPanel.IsVirtualizing="True"
                  VirtualizingPanel.VirtualizationMode="Recycling"
                  VirtualizingPanel.IsContainerVirtualizable="True">
            
            <!-- Input Bindings for keyboard shortcuts -->
            <DataGrid.InputBindings>
                <KeyBinding Key="V" Modifiers="Ctrl" Command="{Binding PasteCommand}" CommandParameter="{Binding SelectedCells, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                <KeyBinding Key="X" Modifiers="Ctrl" Command="{Binding CutCommand}" CommandParameter="{Binding SelectedCells, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                <KeyBinding Key="Delete" Modifiers="Ctrl+Alt" Command="{Binding ClearAllFiltersCommand}"/>
                <KeyBinding Key="Z" Modifiers="Ctrl" Command="{Binding UndoCommand}"/>
                <KeyBinding Key="Y" Modifiers="Ctrl" Command="{Binding RedoCommand}"/>
                <KeyBinding Key="D" Modifiers="Ctrl" Command="{Binding FillDownCommand}" CommandParameter="{Binding SelectedCells, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                <KeyBinding Key="R" Modifiers="Ctrl" Command="{Binding FillRightCommand}" CommandParameter="{Binding SelectedCells, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                <KeyBinding Key="F" Modifiers="Ctrl" Command="{Binding AutofillCommand}" CommandParameter="{Binding SelectedCells, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
            </DataGrid.InputBindings>
            
            <!-- Context Menu -->
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Copy" Command="{Binding CopyCommand}" CommandParameter="{Binding SelectedCells, RelativeSource={RelativeSource AncestorType=DataGrid}}" InputGestureText="Ctrl+C"/>
                    <MenuItem Header="Copy Column" Click="CopyColumn_Click" InputGestureText="Click Header"/>
                    <MenuItem Header="Paste" Command="{Binding PasteCommand}" CommandParameter="{Binding SelectedCells, RelativeSource={RelativeSource AncestorType=DataGrid}}" InputGestureText="Ctrl+V"/>
                    <MenuItem Header="Cut" Command="{Binding CutCommand}" CommandParameter="{Binding SelectedCells, RelativeSource={RelativeSource AncestorType=DataGrid}}" InputGestureText="Ctrl+X"/>
                    <Separator/>
                    <MenuItem Header="Fill Down" Command="{Binding FillDownCommand}" CommandParameter="{Binding SelectedCells, RelativeSource={RelativeSource AncestorType=DataGrid}}" InputGestureText="Ctrl+D"/>
                    <MenuItem Header="Fill Right" Command="{Binding FillRightCommand}" CommandParameter="{Binding SelectedCells, RelativeSource={RelativeSource AncestorType=DataGrid}}" InputGestureText="Ctrl+R"/>
                    <MenuItem Header="Autofill" Command="{Binding AutofillCommand}" CommandParameter="{Binding SelectedCells, RelativeSource={RelativeSource AncestorType=DataGrid}}" InputGestureText="Ctrl+F"/>
                    <MenuItem Header="📊 Fill Series" Click="FillSeries_Click" InputGestureText="Ctrl+Shift+Enter" FontWeight="SemiBold"/>
                    <Separator/>
                    <MenuItem Header="🎯 Select Highlighted Elements" Click="SelectHighlightedElements_Click" InputGestureText="Select in Revit" FontWeight="SemiBold"/>
                    <MenuItem Header="👁️ Show Highlighted Elements" Click="ShowHighlightedElements_Click" InputGestureText="Show Element Info" FontWeight="SemiBold"/>
                    <Separator/>
                    <MenuItem Header="Undo" Command="{Binding UndoCommand}" InputGestureText="Ctrl+Z"/>
                    <MenuItem Header="Redo" Command="{Binding RedoCommand}" InputGestureText="Ctrl+Y"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>

        <!-- Status Bar -->
        <Border Grid.Row="2" Background="#F0F0F0" BorderBrush="#D0D0D0" BorderThickness="0,1,0,0" Padding="10,5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <TextBlock Grid.Column="0" Text="{Binding LoadingStatus}" 
                          VerticalAlignment="Center" FontWeight="SemiBold"/>
                
                <ProgressBar Grid.Column="1" Width="200" Height="18" Margin="10,0"
                            Value="{Binding LoadingProgress}" Maximum="100"
                            VerticalAlignment="Center"/>
                
                <!-- Enhanced Update Model Button -->
                <Button Grid.Column="2" 
                        Content="🔄 Update Model" 
                        Padding="16,8"
                        Height="36"
                        Background="#4CAF50"
                        Foreground="White"
                        FontWeight="SemiBold"
                        FontSize="13"
                        BorderBrush="#45A049"
                        BorderThickness="1"
                        Command="{Binding UpdateModelCommand}"
                        ToolTip="Save changes back to Revit model"
                        Style="{DynamicResource ColoredButtonStyle}">
                    <Button.Effect>
                        <DropShadowEffect Color="Black" Opacity="0.2" ShadowDepth="2" BlurRadius="4"/>
                    </Button.Effect>
                </Button>
            </Grid>
        </Border>
        
        <!-- Status bar với hướng dẫn Fill Series -->
        <Border Grid.Row="3" Background="#F0F0F0" BorderBrush="#D0D0D0" BorderThickness="0,1,0,0" Padding="10,5">
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="11" Foreground="#666666">
                <Run Text="📋 Autofill:"/>
                <Run Text="Double-click (multi-select)" FontWeight="SemiBold"/>
                <Run Text="• Ctrl+Enter (copy) • Shift+Enter (smart) •"/>
                <Run Text="Ctrl+Shift+Enter (series)" FontWeight="SemiBold" Foreground="#4CAF50"/>
                <Run Text="🖱️ Fill Handle:"/>
                <Run Text="Drag (copy) •"/>
                <Run Text="Ctrl+Drag (series)" FontWeight="SemiBold" Foreground="#4CAF50"/>
            </TextBlock>
        </Border>
    </Grid>
</Window>